#include <cstdio>
#include <cstring>
#include <iostream>
using namespace std;

const int MOD = 100;
const int N = 4;

struct Matrix
{
    int mat[N][N];
    friend Matrix operator * ( const Matrix & a, const Matrix & b )
    {
        Matrix c;
        for ( int i = 0; i < N; i++ )
        {
            for ( int j = 0; j < N; j++ )
            {
                c.mat[i][j] = 0;
                for ( int k = 0; k < N; k++ )
                    c.mat[i][j] += a.mat[i][k] * b.mat[k][j];
                c.mat[i][j] = c.mat[i][j] % MOD;
            }

        }
        return c;
    }
    friend int operator ^ ( Matrix a, long long n )
    {
        Matrix c;
        for ( int i = 0; i < N; i++ )
            for ( int j = 0; j < N; j++ )
                c.mat[i][j] = ( i == j ? 1 : 0 );
        while ( n )
        {
            if ( n & 1 )
            {
                c = c * a;
            }
            n = ( n >> 1 );
            a = a * a;
        }
        int ans = c.mat[0][0] * 2 + c.mat[0][1] + c.mat[0][2];
        ans = ans % MOD;
        return ans;
    }
};

int main ()
{
    int t;
    long long n;
    Matrix a;
    for ( int i = 0; i < N; i++ )
    {
        for ( int j = 0; j < N; j++ )
        {
            if ( i == j )
                a.mat[i][j] = 2;
            else if ( i + j == 3 )
                a.mat[i][j] = 0;
            else
                a.mat[i][j] = 1;
        }
    }
    while ( scanf("%d", &t), t )
    {
        for ( int i = 1; i <= t; i++ )
        {
            scanf("%I64d", &n);
            n--;
            printf("Case %d: %d\n", i, a ^ n);
        }
        printf("\n");
    }
    return 0;
}