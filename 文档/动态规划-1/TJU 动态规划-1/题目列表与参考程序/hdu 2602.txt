#include <iostream>
#include <cstring>
using namespace std;

const int N = 1001;
int dp[N];
int vol;  //背包的容量
int cost[N];
int val[N];

//01背包
void ZeroOnePack( int c, int w )
{
  for ( int j = vol; j >= c; j-- )
  {
    dp[j] = max( dp[j], dp[j - c] + w );
  }
}

//完全背包
void CompletePack( int c, int w )
{
  for ( int j = c; j <= vol; j++ )
  {
    dp[j] = max( dp[j], dp[j - c] + w );
  }
}

//二进制多重背包
void MultiplePack( int c, int w, int num )
{
  if ( c * num >= vol )
  {
    CompletePack( c, w );
  }
  else
  {
    int k = 1;
    while ( k < num )
    {
      ZeroOnePack( k * c, k * w );
      num -= k;
      k = k * 2;
    }
    ZeroOnePack( num * c, num * w );
  }
}

int main ()
{
  int t;
  cin >> t;
  while ( t-- )
  {
    int m;
    cin >> m >> vol;
    for ( int i = 1; i <= m; i++ )
    {
      cin >> val[i];
    }
    for ( int i = 1; i <= m; i++ )
    {
      cin >> cost[i];
    }
    memset( dp, 0, sizeof(dp) );
    for ( int i = 1; i <= m; i++ )
    {
      ZeroOnePack( cost[i], val[i] );
    }
    cout << dp[vol] << endl;
  }
  return 0;
}